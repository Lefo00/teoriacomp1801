// limpa registrador
operation zera(A){
   1: if zero A then goto 0 else goto 2
   2: do dec A goto 1
}

//soma A=A+B, zerando B
operation soma(A,B){
   1: if zero B then goto 0 else goto 2
   2: do dec B goto 3
   3: do inc A goto 1
}

//atribui o valor de B para A
//usa K
operation atribui(A,B){
   1: do zera(A) goto 2
   2: if zero B then goto 6 else goto 3
   3: do dec B goto 4
   4: do inc K goto 5
   5: do inc A goto 2
   6: do soma(B,K) goto 0
}

//soma C vezes o valor de B, armazenando em B
//usa D, E, F
operation multiplica(B, C){
   1: do atribui(D,B) goto 2
   2: do atribui(E,C) goto 3
   3: do dec E goto 4
   4: if zero E then goto 0 else goto 5
   5: do atribui(F,D) goto 6
   6: do soma(B,F) goto 3
}

//calcula a potencia O^P
//usa R
operation potencia(O,P){
   1: if zero P then goto 2 else goto 4
   2: do zera(O) goto 3
   3: do inc O goto 0
   4: if zero O then goto 0 else goto 5
   5: do atribui(R,O) goto 6
   6: do dec P goto 7
   7: do multiplica(O,R) goto 8
   8: if cmp P 1 then goto 0 else goto 6
}

//calcula o valor codificado do par (A,B) e o armazena em P
//usa G
operation pair(P,A,B){
   1: do zera(G) goto 2
   2: do add G 2 goto 3
   3: do potencia(G,A) goto 4
   4: do zera(P) goto 5
   5: do add P 3 goto 6
   6: do potencia(P,B) goto 7
   7: do multiplica(P,G) goto 0
}

//
// 2.a) f(x, y) retorna o par ordenado (w, z) tal que w é o menor múltiplo
//      comum positivo de x e y (se existir, caso contrário 0) e z é o maior
//      divisor comum de x e y (se existir, caso contrário 0). Por exemplo,
//      f(5, 0) = (0, 5); f(2, 8) = (8, 2); f(2,3) = (6,1); f(1, 17) = (17, 1)
//      e f(0, 0) = (0, 0).
main{
   1: do atribui(H,X) goto 2
   2: do atribui(Y,X) goto 3
   3: do potencia(Y,H) goto 0
}